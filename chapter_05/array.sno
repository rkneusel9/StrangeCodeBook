*
*  SNOBOL arrays are dynamically allocated,
*  allow arbitrary number of dimensions, custom index ranges
*  and assignment of arbitrary data, including nested arrays
*  and tables.  Indexing uses < > or [ ]
*
 A = array('0:9')
 A[0] = 'one'
 A[1] = 3.141592
 A[2] = 123456
 A[3] = array(6)
 A[3][1] = 'nested'

 output = 'A[2]          = ' A[2]
 output = 'A[1]          = ' A[1]
 output = 'A[0]          = ' A[0]
 output = 'A[3]          = ' convert(A[3],'string')
 output = 'A[3][1]       = ' A[3][1]

 B = array('128,128',0)
 B[11,22] = 5555
 B[12,45] = array('11,11')
 B[12,45]<5,6> = 'how are you?'

 data('complex(real,imag)')
 B[12,45][1,2] = complex(3,0.141592)

 output = 'B[1,1]        = ' B[1,1]
 output = 'B[12,45][5,6] = ' B[12,45][5,6]
 output = 'B[12,45][1,2] = ' real(B[12,45][1,2]) '+' imag(B[12,45][1,2]) 'i'

* Copy versus assignment
 A = array('0:5')
 A[0] = 'xyzzy'
 D = A
 D[0] = 12345
 output = 'A[0] is now ' A[0]
 E = copy(A)
 E[0] = 99999
 output = 'E[0] is ' E[0]
 output = 'A[0] is still ' A[0]

* Copies are not deep
 output =
 C = copy(B)
 C[11,22] = 4444
 output = 'C[11,22]      = ' C[11,22]
 output = 'B[11,22]      = ' B[11,22]
 C[12,45][5,6] = 8675309
 output = 'B[12,45][5,6] = ' B[12,45][5,6]
 output = 'C[12,45][5,6] = ' C[12,45][5,6]
end

